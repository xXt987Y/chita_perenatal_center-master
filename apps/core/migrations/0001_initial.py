# Generated by Django 3.2 on 2021-05-04 07:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AKO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'АКО',
            },
        ),
        migrations.CreateModel(
            name='Autorecomendacii',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vozrastnaya_grupa', models.CharField(blank=True, max_length=255, null=True, verbose_name='Возрастная группа')),
                ('recomendaciya', models.TextField(blank=True, null=True, verbose_name='Текст рекомендации')),
            ],
            options={
                'verbose_name': 'Авторекомендация',
                'verbose_name_plural': 'Авторекомендации',
            },
        ),
        migrations.CreateModel(
            name='Beremennaya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер')),
                ('data_vzyatiya', models.DateField(verbose_name='Дата взятия')),
                ('fio', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО беременной')),
                ('data_rojdeniya', models.DateField(verbose_name='Дата рождения')),
                ('vozrast', models.CharField(blank=True, max_length=255, null=True, verbose_name='Возраст беременной')),
                ('nomer_telefona', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер телефона')),
                ('nomer_oms', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер ОМС беременной')),
                ('vrednie_privichki_kurenie', models.BooleanField(default=False, verbose_name='Курение')),
                ('vrednie_privichki_alco', models.BooleanField(default=False, verbose_name='Алкоголизм')),
                ('vrednie_privichki_narko', models.BooleanField(default=False, verbose_name='Наркомания')),
                ('vrednie_privichki_toxi', models.BooleanField(default=False, verbose_name='Таксикомания')),
                ('vrednie_factori_truda_himicheskie', models.BooleanField(default=False, verbose_name='Химические')),
                ('vrednie_factori_truda_radioactiv', models.BooleanField(default=False, verbose_name='Радиоактивные')),
                ('vrednie_factori_truda_priem_lekarstvennih_sredstv', models.BooleanField(default=False, verbose_name='Прием лек. средств в ранние сроки беременности')),
                ('vrednie_factori_truda_neudvl_jil_ysloviya', models.BooleanField(default=False, verbose_name='Неудвл. жил. условия')),
                ('socialno_ugrojaemaya', models.BooleanField(default=False, verbose_name='Социально угрожаемая')),
                ('somaticheskie_pokazateli_muzskoy', models.BooleanField(default=False, verbose_name='')),
                ('somaticheskie_pokazateli_girsutizm', models.BooleanField(default=False, verbose_name='')),
                ('ves', models.CharField(blank=True, max_length=255, null=True, verbose_name='Вес беременной')),
                ('rost', models.CharField(blank=True, max_length=255, null=True, verbose_name='Рост беременной')),
                ('index', models.CharField(blank=True, max_length=255, null=True, verbose_name='Индекс массы тела')),
                ('razmer_taza_ds', models.CharField(blank=True, max_length=255, null=True, verbose_name='Distania spinarium')),
                ('razmer_taza_dc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Distania cristarum')),
                ('razmer_taza_dt', models.CharField(blank=True, max_length=255, null=True, verbose_name='Distania trochanterica')),
                ('razmer_taza_cd', models.CharField(blank=True, max_length=255, null=True, verbose_name='Conjugata diagonalis')),
                ('razmer_taza_ce', models.CharField(blank=True, max_length=255, null=True, verbose_name='Conjugata externa')),
                ('razmer_taza_cv', models.CharField(blank=True, max_length=255, null=True, verbose_name='Conjugata vera')),
                ('rezus_faktori_beremennoy_otca', models.IntegerField(blank=True, choices=[(1, '+/+'), (2, '+/-'), (3, '-/+'), (4, '-/-')], null=True)),
                ('zabolevanie_vnut_pol_organov_vospalenie_neroj', models.BooleanField(default=False, verbose_name='Воспаление придатков у нерожавшей')),
                ('zabolevanie_vnut_pol_organov_vospalenie_roj', models.BooleanField(default=False, verbose_name='Воспаление придатков у рожавшей')),
                ('zabolevanie_vnut_pol_organov_opuhl', models.BooleanField(default=False, verbose_name='Опухлевое образование придатков')),
                ('zabolevanie_vnut_pol_organov_mioma', models.BooleanField(default=False, verbose_name='Миома матки')),
                ('zabolevanie_vnut_pol_organov_gipoplaziya', models.BooleanField(default=False, verbose_name='Гипоплазия матки')),
                ('zabolevanie_vnut_pol_organov_poroki', models.BooleanField(default=False, verbose_name='Пороки развития матки')),
                ('zabolevanie_vnut_pol_organov_operacii_pred', models.BooleanField(default=False, verbose_name='Операции на придатках')),
                ('zabolevanie_vnut_pol_organov_operacii_matk', models.BooleanField(default=False, verbose_name='Операции на матке (кроме кес/сеч)')),
                ('zabolevanie_vnut_pol_organov_istmiko', models.BooleanField(default=False, verbose_name='Истмико-цервикальная недостаточность')),
                ('zabolevanie_vnut_pol_organov_onkologiya', models.BooleanField(default=False, verbose_name='Онкология в анамезе')),
                ('nastuplenie_beremennosti_v_rezultate_ovulyacii', models.BooleanField(default=False, verbose_name='Наступление беременности в результате стимуляции овуляции медикаментозными средствами')),
                ('data_pervogo_dnya_posledney_menstruacii', models.DateField(verbose_name='Дата первого дня последней менструации')),
                ('vnematochnaya_beremennost', models.BooleanField(default=False, verbose_name='Внематочная беременность')),
                ('rezus_konfliktnaya_beremennost', models.BooleanField(default=False, verbose_name='Резус-конфликтная беременность')),
                ('gemoliticheskaya_bolezn', models.BooleanField(default=False, verbose_name='Гемолитическая болезнь плода или новорожденного')),
                ('oslojneniya_beremennosti_anemez_fetoplacent', models.BooleanField(default=False, verbose_name='Осложн. фетоплацент. недостаточностью')),
                ('oslojneniya_beremennosti_anemez_obostrenie', models.BooleanField(default=False, verbose_name='Осложн. обостр. экстрагенит. патологии')),
                ('oslojneniya_beremennosti_anemez_prejdevremennoy', models.BooleanField(default=False, verbose_name='Осложн. преждевремен. отслойкой плаценты')),
                ('oslojneniya_rodov_osl_razrivom', models.BooleanField(default=False, verbose_name='Ослож. разрывом мягких родовых путей 2-3 степени')),
                ('oslojneniya_rodov_osl_krovotech', models.BooleanField(default=False, verbose_name='Ослож. кровотечением')),
                ('oslojneniya_rodov_osl_gnoyno', models.BooleanField(default=False, verbose_name='Ослож. гнойно-септической инфекцией')),
                ('oslojneniya_rodov_osl_mertvoroj', models.BooleanField(default=False, verbose_name='Ослож. мертворождением')),
                ('oslojneniya_anomaliyami_rodovoy_deyatelnosti', models.BooleanField(default=False, verbose_name='Ослож. аномалиями родовой деятельности')),
                ('klinicheski_uzkiy_taz', models.BooleanField(default=False, verbose_name='Клинически узкий таз')),
                ('plodorazrushayushaya_operaciya', models.BooleanField(default=False, verbose_name='Плодоразрушающая операция')),
                ('novorojdenniy_plod_smert', models.BooleanField(default=False, verbose_name='Смерть в неонатальном периоде')),
                ('novorojdenniy_plod_ves', models.BooleanField(default=False, verbose_name='Вес новорожденного был менее 2500г или более 4000г')),
                ('novorojdenniy_plod_nevrolgiych', models.BooleanField(default=False, verbose_name='Неврологические нарушения')),
                ('novorojdenniy_plod_vpr', models.BooleanField(default=False, verbose_name='ВПР')),
                ('novorojdenniy_plod_perinatalnie', models.BooleanField(default=False, verbose_name='Перинатальные потери')),
                ('infekcionnie_bolezni_gripp', models.BooleanField(default=False, verbose_name='Грипп')),
                ('infekcionnie_bolezni_sifilis', models.BooleanField(default=False, verbose_name='Сифилис')),
                ('infekcionnie_bolezni_vich', models.BooleanField(default=False, verbose_name='ВИЧ-инфекция')),
                ('infekcionnie_bolezni_krasnuha', models.BooleanField(default=False, verbose_name='Краснуха')),
                ('infekcionnie_bolezni_orvi', models.BooleanField(default=False, verbose_name='ОРВИ')),
                ('infekcionnie_bolezni_tuberkulez', models.BooleanField(default=False, verbose_name='Туберкулез')),
                ('infekcionnie_bolezni_virusniy_gepatit', models.BooleanField(default=False, verbose_name='Вирусный гепатит')),
                ('zlokachestvennie_obrazovaniya', models.BooleanField(default=False, verbose_name='Наличие в прошлом и настоящем')),
                ('deincifalniy_sindrom', models.BooleanField(default=False, verbose_name='Диэнцефальный синдром')),
                ('bolezni_krovi_anemiya', models.BooleanField(default=False, verbose_name='Анемия всех степеней')),
                ('bolezni_krovi_trombocitopeniya', models.BooleanField(default=False, verbose_name='Тромбоцитопения')),
                ('bolezni_krovi_trombozi', models.BooleanField(default=False, verbose_name='Тромбозы')),
                ('psih_rastroystva_psihozi', models.BooleanField(default=False, verbose_name='Психозы')),
                ('psih_rastroystva_narusheniya_lich', models.BooleanField(default=False, verbose_name='Нарушения личности')),
                ('psih_rastroystva_shizofreniya', models.BooleanField(default=False, verbose_name='Шизофрения')),
                ('psih_rastroystva_umstvennaya_otstalost', models.BooleanField(default=False, verbose_name='Умственная отсталость')),
                ('bolezni_nervnoy_sistemi_nasledstvennie', models.BooleanField(default=False, verbose_name='Наследственные и дегенеративные болезни ЦНС')),
                ('bolezni_nervnoy_sistemi_vospalitelnie', models.BooleanField(default=False, verbose_name='Воспалительные болезни ЦНС')),
                ('bolezni_nervnoy_sistemi_miopiya', models.BooleanField(default=False, verbose_name='Миопия высокой степени и миопия с дистрофическими изменениями')),
                ('ako', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.ako', verbose_name='АКО')),
            ],
            options={
                'verbose_name': 'Беременная',
            },
        ),
        migrations.CreateModel(
            name='Besplodie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Бесплодие',
            },
        ),
        migrations.CreateModel(
            name='CelNapravleniya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название цели направления')),
            ],
            options={
                'verbose_name': 'Цель направления',
                'verbose_name_plural': 'Цели аправления',
            },
        ),
        migrations.CreateModel(
            name='FetoplacentarnayaNedostatochnost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'фетоплацентарная недостаточность',
            },
        ),
        migrations.CreateModel(
            name='FormaSujeniyaTaza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Форма сужения таза',
            },
        ),
        migrations.CreateModel(
            name='GeneticheskieFaktori',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Генетические факторы',
            },
        ),
        migrations.CreateModel(
            name='GestacionniySaharniyDiabed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Гестационный сахарный диабед',
            },
        ),
        migrations.CreateModel(
            name='GibelPloda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Гибель плода',
            },
        ),
        migrations.CreateModel(
            name='IskustvenniyAbort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Искусственный аборт',
            },
        ),
        migrations.CreateModel(
            name='KesarevoSechenie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Кесарево сечение',
            },
        ),
        migrations.CreateModel(
            name='Koagulopatiya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Коагулопатия',
            },
        ),
        migrations.CreateModel(
            name='MedOrganizacia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('ZKPC', models.BooleanField(blank=True, default=True, verbose_name='ЗКПЦ? Да/Нет')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Электронная почта')),
                ('kontaktnaya_informaciya', models.TextField(blank=True, null=True, verbose_name='Контактная информация')),
            ],
            options={
                'verbose_name': 'Медицинская организация',
                'verbose_name_plural': 'Медицинские организации',
            },
        ),
        migrations.CreateModel(
            name='MenstrualnayaFunkciya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Менструальная функция',
            },
        ),
        migrations.CreateModel(
            name='MestoIshoda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Место исхода',
            },
        ),
        migrations.CreateModel(
            name='MKB10',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kod', models.CharField(blank=True, max_length=255, null=True, verbose_name='Код по МКБ10')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Код по МКБ10',
            },
        ),
        migrations.CreateModel(
            name='Mnogoplodie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Многоплодие',
            },
        ),
        migrations.CreateModel(
            name='NalichieVprPoRezultatamUzi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Наличие ВПР по результатам УЗИ',
            },
        ),
        migrations.CreateModel(
            name='NastuplenieBeremennostiVRezultate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Наступление беременности в результате ЭКО',
            },
        ),
        migrations.CreateModel(
            name='NepravilnoePolojeniePloda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Неправильное положение плода',
            },
        ),
        migrations.CreateModel(
            name='Novorojdenniy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Новорожденный',
            },
        ),
        migrations.CreateModel(
            name='ObsheeSostoyaniePloda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Общее состояние плода',
            },
        ),
        migrations.CreateModel(
            name='OslojneniyaBeremennostiAnamez',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Осложнения беременности (анамез)',
            },
        ),
        migrations.CreateModel(
            name='OslojneniyaIskustvenniyAbort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Осложнения',
            },
        ),
        migrations.CreateModel(
            name='OslojneniyaRodov',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Осложнения родов',
            },
        ),
        migrations.CreateModel(
            name='ParitetBeremennosti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Паритет беременности',
            },
        ),
        migrations.CreateModel(
            name='PredlejaniePlacenti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Предлежание плаценты',
            },
        ),
        migrations.CreateModel(
            name='Preeklampsiya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Преэклампсия',
            },
        ),
        migrations.CreateModel(
            name='Rayon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('korotkoe_nazvanie', models.CharField(max_length=255, verbose_name='Короткое название')),
                ('v_chite', models.BooleanField(blank=True, default=False, verbose_name='Находится в Чите?Да/Нет')),
            ],
            options={
                'verbose_name': 'Район',
                'verbose_name_plural': 'Районы',
            },
        ),
        migrations.CreateModel(
            name='RezusSensibilizaciya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Резус сенсибилизация',
            },
        ),
        migrations.CreateModel(
            name='Roli',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название роли')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
            },
        ),
        migrations.CreateModel(
            name='SaharniyDiabed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Сахарный диабед',
            },
        ),
        migrations.CreateModel(
            name='SamoproizvolniyAbort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Самопроизвольный аборт',
            },
        ),
        migrations.CreateModel(
            name='SemeynoePolojenie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Семейное положение',
            },
        ),
        migrations.CreateModel(
            name='SmertNovorojdennogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Смерть новорожденного',
            },
        ),
        migrations.CreateModel(
            name='StepenRiska',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Степень риска',
            },
        ),
        migrations.CreateModel(
            name='StepenRiskaPosleIshoda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Степень риска после исхода',
            },
        ),
        migrations.CreateModel(
            name='StepenSujeniyaTaza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Степень сужения таза',
            },
        ),
        migrations.CreateModel(
            name='TipBesplodiya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип бесплодия',
            },
        ),
        migrations.CreateModel(
            name='TipOrganizacii',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Тип мед организации')),
            ],
            options={
                'verbose_name': 'Медицинская организация',
                'verbose_name_plural': 'Медицинские организации',
            },
        ),
        migrations.CreateModel(
            name='UrovenBetaHgch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Уровень бета ХГЧ',
            },
        ),
        migrations.CreateModel(
            name='UrovenMedObsluzivaniya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Уровень мед обслуживания')),
            ],
            options={
                'verbose_name': 'Медицинская организация',
                'verbose_name_plural': 'Медицинские организации',
            },
        ),
        migrations.CreateModel(
            name='UrovenPappa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Уровень РРАР-А',
            },
        ),
        migrations.CreateModel(
            name='VzyataPodNabludenie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Взята под наблюдение',
            },
        ),
        migrations.CreateModel(
            name='ZabolevanieShitovidnoy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Заболевание щитовидной железы',
            },
        ),
        migrations.CreateModel(
            name='Smena_JK_u_beremennoy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prichina', models.TextField(blank=True, null=True, verbose_name='Причина')),
                ('nomer_beremennoy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.beremennaya', verbose_name='Номер анкеты')),
                ('novaya_JK', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.medorganizacia', verbose_name='Новая ЖК')),
            ],
            options={
                'verbose_name': 'Смена ЖК у беременной',
            },
        ),
        migrations.CreateModel(
            name='Polzovateli',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('med_organiizaciya', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.medorganizacia', verbose_name='Медицинская организация')),
                ('rol', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.roli')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Юзер')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Napravlenie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predpolagaemyi_diagnoz', models.TextField(blank=True, null=True, verbose_name='Текст предполагаемого диагноза')),
                ('diagnoz_podtverjden', models.BooleanField(blank=True, default=False, null=True, verbose_name='Диагноз подтвержден? Да/Нет')),
                ('data', models.DateField(blank=True, null=True, verbose_name='Дата явки беременной в ЖК с результатом направления')),
                ('nomer_beremennoy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.beremennaya', verbose_name='Номер беременной')),
                ('punkt_napravleniya', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.medorganizacia', verbose_name='Пункт направления')),
            ],
            options={
                'verbose_name': 'Направление',
                'verbose_name_plural': 'Направления',
            },
        ),
        migrations.AddField(
            model_name='medorganizacia',
            name='rayon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.rayon', verbose_name='Район'),
        ),
        migrations.AddField(
            model_name='medorganizacia',
            name='tip_organizacii',
            field=models.ForeignKey(blank=True, default=True, on_delete=django.db.models.deletion.CASCADE, to='core.tiporganizacii'),
        ),
        migrations.AddField(
            model_name='medorganizacia',
            name='uroven_med_obclujivaniya',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.urovenmedobsluzivaniya'),
        ),
        migrations.CreateModel(
            name='Konsultaciaya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otpravleno', models.DateField(blank=True, null=True, verbose_name='Отправлено (дата отправления)')),
                ('tema', models.CharField(blank=True, max_length=255, null=True, verbose_name='Тема')),
                ('soobshenie', models.TextField(blank=True, null=True, verbose_name='Сообщение')),
                ('egp', models.BooleanField(blank=True, default=False, null=True, verbose_name='ЭГП')),
                ('oaa', models.BooleanField(blank=True, default=False, null=True, verbose_name='ОАА')),
                ('rubec_na_matke', models.BooleanField(blank=True, default=False, null=True, verbose_name='Рубец на матке')),
                ('rh_sensibilizaciya', models.BooleanField(blank=True, default=False, null=True, verbose_name='Rh-сенсибилизация')),
                ('prochie', models.TextField(blank=True, null=True, verbose_name='Прочие')),
                ('nomer_beremennoy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.beremennaya', verbose_name='Номер беременной')),
                ('otpravitel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.polzovateli', verbose_name='Отправитель (роль)')),
            ],
            options={
                'verbose_name': 'Консультация',
                'verbose_name_plural': 'Консультации',
            },
        ),
        migrations.CreateModel(
            name='Ishod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_ishoda', models.DateField(verbose_name='Дата исхода')),
                ('preeklampsiya', models.BooleanField(default=False, verbose_name='Преэклампсия')),
                ('predlejanie_placenti', models.BooleanField(default=False, verbose_name='Предлежание плаценты')),
                ('prejdevrem_otsloyka', models.BooleanField(default=False, verbose_name='Преждеврем. отслойка норм. расп. плаценты')),
                ('anomalii_rodovoy_deyatelnosti', models.BooleanField(default=False, verbose_name='Аномалии родовой деятельности')),
                ('klinicheski_uzkiy_taz', models.BooleanField(default=False, verbose_name='Клинически узкий таз')),
                ('razriv_matki', models.BooleanField(default=False, verbose_name='Разрыв матки')),
                ('dvc_sindrom', models.BooleanField(default=False, verbose_name='ДВС-синдром')),
                ('emboliya', models.BooleanField(default=False, verbose_name='Эмболия')),
                ('smert_materi', models.BooleanField(default=False, verbose_name='Смерть матери')),
                ('data_smerti_materi', models.DateField(verbose_name='Дата смерти матери')),
                ('gibel_ploda', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.gibelploda', verbose_name='Гибель плода')),
                ('mesto_ishoda', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.mestoishoda', verbose_name='Место исхода')),
                ('stepen_riska_posle_ishoda', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.stepenriskaposleishoda', verbose_name='Степень риска после исхода')),
            ],
            options={
                'verbose_name': 'Исход',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО')),
                ('rabotaet', models.BooleanField(blank=True, default=True, verbose_name='Работает?Да/Нет')),
                ('med_organiizaciya', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.medorganizacia', verbose_name='Медицинская организация')),
            ],
            options={
                'verbose_name': 'Доктор',
                'verbose_name_plural': 'Доктора',
            },
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='besplodie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.besplodie', verbose_name='Бесплодие'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='forma_sujeniya_taza',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.formasujeniyataza', verbose_name='Форма сужения таза'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='geneticheskie_faktori',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.geneticheskiefaktori', verbose_name='Генетические факторы'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='gestacionniy_saharniy_diabed',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.gestacionniysaharniydiabed', verbose_name='Гестационный cахарный диабед'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='iskustvenniy_abort',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.iskustvenniyabort', verbose_name='Искусственный аборт'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='iskustvenniy_abort_oslojneniya',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.oslojneniyaiskustvenniyabort', verbose_name='Осложнения'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='kesarevo_sechenie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.kesarevosechenie', verbose_name='Кесарево сечение'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='koagulopatiya',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.koagulopatiya', verbose_name='Коагулопатия'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='menstrualnaya_funkciya',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.menstrualnayafunkciya', verbose_name='Менструальная функция'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='mesto_postoyannogo_projivaniya',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.rayon', verbose_name='Место постоянного проживания'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='nastuplenie_beremennosti_v_rezultate_eco',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.nastuplenieberemennostivrezultate', verbose_name='Наступление беременности в результате ЭКО'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='oslojneniya_beremennosti_anemez',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.oslojneniyaberemennostianamez', verbose_name='Осложнение беременности (анамез)'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='oslojneniya_rodov',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.oslojneniyarodov', verbose_name='Осложнения родов'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='paritet_beremennosti',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.paritetberemennosti', verbose_name='Паритет беременности'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='saharniy_diabed',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.saharniydiabed', verbose_name='Сахарный диабед'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='samoproizvolniy_abort',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.samoproizvolniyabort', verbose_name='Самопроизвольный аборт'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='semeynoe_polojenie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.semeynoepolojenie', verbose_name='Семейное положение'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='stepen_riska',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.stepenriska', verbose_name='Степень риска'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='stepen_sujeniya_taza',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.stepensujeniyataza', verbose_name='Степень сужения таза'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='tip_besplodiya',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.tipbesplodiya', verbose_name='Тип бесплодия'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='vrach',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.doctor', verbose_name='Врач'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='vzyata_pod_nabludenie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.vzyatapodnabludenie', verbose_name='Взята под наблюдение'),
        ),
        migrations.AddField(
            model_name='beremennaya',
            name='zabolevanie_shitovidnoy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.zabolevanieshitovidnoy', verbose_name='Заболевание щитовидной железы'),
        ),
        migrations.CreateModel(
            name='Anketa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_zapolneniya_anketi_vrachem', models.DateField(verbose_name='Дата заполнения анкеты врачем')),
                ('ves_beremennoy', models.CharField(blank=True, max_length=255, null=True, verbose_name='Вес беременной')),
                ('srok_beremennosti_po_obektivnim_dannim', models.CharField(blank=True, max_length=255, null=True, verbose_name='По объективным данным')),
                ('srok_beremennosti_po_dannim_uzi', models.CharField(blank=True, max_length=255, null=True, verbose_name='По данным УЗИ')),
                ('srok_beremennosti_po_pervomu', models.CharField(blank=True, max_length=255, null=True, verbose_name='По первому шевелению плода')),
                ('osobennosti_protekaniya_beremennosti_krovynistie', models.BooleanField(default=False, verbose_name='Кровянистые выделения в дни, соответств. ожидаемой менструации')),
                ('osobennosti_protekaniya_beremennosti_virazenniy_toxikoz', models.BooleanField(default=False, verbose_name='Выраженный токсикоз ')),
                ('osobennosti_protekaniya_beremennosti_krovotechenie', models.BooleanField(default=False, verbose_name='Кровотечение')),
                ('ugroza_prerivaniya_do_22', models.BooleanField(default=False, verbose_name='До 22-ти недельного срока')),
                ('ugroza_prerivaniya_posle_22', models.BooleanField(default=False, verbose_name='После 22-ти недельного срока')),
                ('antifosfolipidniy_sindrom', models.BooleanField(default=False, verbose_name='Есть')),
                ('abo_sensibilizaciya', models.BooleanField(default=False, verbose_name='ABO-сенсибилизация')),
                ('narushenie_okoplodnih_vod_mnogovodie', models.BooleanField(default=False, verbose_name='Многоводие')),
                ('narushenie_okoplodnih_vod_malovodie', models.BooleanField(default=False, verbose_name='Маловодие')),
                ('narushenie_okoplodnih_vod_mekonialnie', models.BooleanField(default=False, verbose_name='Мекониальные')),
                ('obvitie_pupovini', models.BooleanField(default=False, verbose_name='Есть')),
                ('krupniy_plod', models.BooleanField(default=False, verbose_name='Тазовое предлежание')),
                ('fakt_provedeniya_uzi_10_14', models.BooleanField(default=False, verbose_name='В срок 10-14 нед.')),
                ('fakt_provedeniya_uzi_20_24', models.BooleanField(default=False, verbose_name='В срок 20-24 нед.')),
                ('fakt_provedeniya_uzi_32_34', models.BooleanField(default=False, verbose_name='В срок 32-34 нед.')),
                ('nesootvetstvie_dannih_uzi_soot', models.BooleanField(default=False, verbose_name='Сост. ок. -плод.вод. (количество(ИАЖ), прозрачность, наличие взвеси, примес.')),
                ('nesootvetstvie_dannih_uzi_fetomerii', models.BooleanField(default=False, verbose_name='Фетомерии (размеры плодного яйца, эмбриона, плода)')),
                ('nesootvetstvie_dannih_uzi_placenti', models.BooleanField(default=False, verbose_name='Плаценты/хориона (толщина, структура, степень зрелости)')),
                ('data_provedeniya_prenatalnogo_konsiliuma', models.DateField(verbose_name='Дата проведения пренатального консилиума')),
                ('nomer_protokola', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер протокола')),
                ('napravlena_na_extrennoe_rodorazreshenie', models.BooleanField(default=False, verbose_name='Да')),
                ('dopolnitelnie_zamechaniya_vracha', models.TextField(blank=True, null=True, verbose_name='Текст рекомендации')),
                ('diagnoz_osnovnoy_mkb10', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.mkb10', verbose_name='Диагноз основной (код по МКБ-10)')),
                ('familiya_vracha', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.doctor', verbose_name='Фамилия врача заполнившего анкету')),
                ('fetoplacentarnaya_nedostatochnost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.fetoplacentarnayanedostatochnost', verbose_name='Фетоплацентарная недостаточность')),
                ('mnogoplodie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.mnogoplodie', verbose_name='Многоплодие')),
                ('nalichie_vpr_po_rezultatam_uzi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.nalichievprporezultatamuzi', verbose_name='Наличие ВПР по результатам УЗИ')),
                ('nepravilnoe_polojenie_ploda', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.nepravilnoepolojenieploda', verbose_name='Неправильное положение плода')),
                ('nomer_anketi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.beremennaya', verbose_name='Номер анкеты')),
                ('obshee_sostoyanie_ploda', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.obsheesostoyanieploda', verbose_name='Общее состояние плода')),
                ('predlejanie_placenti', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.predlejanieplacenti', verbose_name='Предлежание плаценты')),
                ('preeklampsiya', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.preeklampsiya', verbose_name='Преэклампсия')),
                ('rezus_sensibilizaciya', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.rezussensibilizaciya', verbose_name='Резус-сенсибилизация')),
                ('uroven_beta_hgch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.urovenbetahgch', verbose_name='Уровень бета ХГЧ')),
                ('uroven_papp_a', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.urovenpappa', verbose_name='Уровень РАРР-А')),
            ],
            options={
                'verbose_name': 'Анкета беременной',
            },
        ),
    ]
